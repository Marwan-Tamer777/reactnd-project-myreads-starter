{"version":3,"sources":["BooksAPI.js","Book.js","BookSearch.js","Bookshelfs.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","GetBook","React","Component","constructor","arguments","state","option","undefined","this","props","book","shelf","newShelf","update","fetch","concat","id","method","body","JSON","stringify","then","res","json","BooksAPI","console","log","setState","updateParent","componentDidMount","confirmBook","render","_jsxs","className","children","_jsx","style","width","height","backgroundImage","imageLinks","thumbnail","value","onChange","event","updateOptions","target","disabled","title","authors","map","index","BookSearch","searchedBooks","empty","term","query","setTimeout","data","books","error","Link","to","type","placeholder","onInput","displaySearch","updateBook","confirm","BookShelfs","filter","BooksApp","allbooks","getAllBooks","async","bookAlreadyIn","x","Route","exact","path","ReactDOM","BrowserRouter","App","document","getElementById"],"mappings":"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","file":"static/js/main.d08c0b56.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>(\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => (res.json()))\r\n    .then(data => (data.books)))\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\n\r\n\r\n\r\nclass GetBook extends React.Component{\r\n\r\n  state = {\r\n    option: this.props.book.shelf === undefined ? 'none' : this.props.book.shelf\r\n  }\r\n\r\n \r\n  async updateOptions(book,newShelf){\r\n      await BooksAPI.update(book,newShelf)\r\n      .then((res)=>(console.log(\"updated book: \",res)))\r\n      .then(()=>(this.setState({\"option\":newShelf})))\r\n      .then(this.props.updateParent)\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.props.confirmBook === undefined ? console.log('') : \r\n    (this.props.confirmBook(this.props.book) === undefined ? console.log('') :\r\n    this.setState({option : this.props.confirmBook(this.props.book).shelf})\r\n    )\r\n  }\r\n\r\n   render(){ \r\n     return (<div className=\"book\">\r\n                          <div className=\"book-top\">\r\n                            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage:\r\n                               (this.props.book.imageLinks === undefined ? '' : `url(\"${this.props.book.imageLinks.thumbnail}\")`)}}></div>\r\n                            \r\n                            <div className=\"book-shelf-changer\">\r\n                              <select value ={this.state.option} onChange={(event)=>( this.updateOptions(this.props.book, event.target.value))}>\r\n                                <option value=\"move\" disabled>Move to...</option>\r\n                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                <option value=\"wantToRead\">Want to Read</option>\r\n                                <option value=\"read\">Read</option>\r\n                                <option value=\"none\">None</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"book-title\">{this.props.book.title}</div>\r\n                          <div className=\"book-authors\">{(this.props.book.authors === undefined ? [] : this.props.book.authors).map((value, index) => (<p key = {index}>{value}</p>))}</div>\r\n                        </div>\r\n        )}\r\n}\r\n\r\nexport default GetBook","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport GetBook from './Book'\r\n\r\n\r\nclass BookSearch extends React.Component{\r\n\r\n  state={\r\n      searchedBooks: [],\r\n      empty: 0\r\n  }\r\n\r\n  async displaySearch(term){\r\n    term === '' ? \r\n    (setTimeout(()=>(this.setState({searchedBooks: [], empty: 0})), 1000))\r\n    :\r\n    (await BooksAPI.search(term)\r\n      .then((res)=>( \r\n        res.error === undefined ? (this.setState({searchedBooks: res, empty: 0})) : (this.setState({searchedBooks: [], empty:1}))\r\n        ))\r\n      )\r\n  }\r\n\r\n    render(){\r\n      return (<div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <Link to=\"/\" className=\"close-search\">Close</Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                <input type=\"text\" placeholder=\"Search by title or author\" onInput={(event)=>(this.displaySearch(event.target.value))}/>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n                {console.log(\"searched books: \", this.state.searchedBooks) , this.state.empty === 1 ? <div>we couldn't find any books sadly</div> : \r\n                this.state.searchedBooks.map((value,index)=> (<li key= {index} ><GetBook  book={value} updateParent={this.props.updateBook} confirmBook = {this.props.confirm}/></li>))}\r\n              </ol>\r\n            </div>\r\n          </div>)\r\n          }\r\n}\r\n\r\nexport default BookSearch","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport GetBook from './Book'\r\n\r\nfunction BookShelfs(props){\r\n  const {books, update} = props\r\n  console.log(\"all books:\",books)\r\n\r\n    return(<div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n            </div>\r\n        <div className=\"list-books-content\">\r\n              <div>\r\n                <div className=\"bookshelf\">\r\n                  <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                  <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                      {books.filter(book => book.shelf === \"currentlyReading\")\r\n                      .map((value,index)=> (<li key={index}><GetBook book={value} updateParent ={update}/></li>))}\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bookshelf\">\r\n                  <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                  <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                      {books.filter(book => book.shelf === \"wantToRead\")\r\n                      .map((value,index)=> (<li key={index}><GetBook book={value} updateParent ={update}/></li>))}\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bookshelf\">\r\n                  <h2 className=\"bookshelf-title\">Read</h2>\r\n                  <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                      {books.filter(book => book.shelf === \"read\")\r\n                      .map((value,index)=> (<li key={index}><GetBook book={value} updateParent ={update}/></li>))}\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"open-search\">\r\n              <Link to=\"/search\" className=\"add-button\">Add a book</Link>\r\n              </div>\r\n              </div>\r\n        )\r\n}\r\n\r\nexport default BookShelfs","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport {Route} from 'react-router-dom'\r\nimport BookSearch from './BookSearch'\r\nimport BookShelfs from './Bookshelfs'\r\n\r\n\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    allbooks:[]\r\n  }\r\n\r\n  getAllBooks = async () =>(\r\n      await BooksAPI.getAll()\r\n      .then((res)=>(this.setState({allbooks: res})))\r\n\r\n    )\r\n    bookAlreadyIn = (book) => {\r\n     return (this.state.allbooks.filter(x => x.title === book.title)[0])\r\n    }\r\n\r\n   componentDidMount() {\r\n      this.getAllBooks()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route exact path = '/' render={()=>(\r\n        <div>  <BookShelfs books={this.state.allbooks} update={this.getAllBooks} /></div>)}>\r\n          \r\n        </Route>\r\n\r\n          <Route path = '/search' render ={()=>(<BookSearch updateBook= {this.getAllBooks} confirm = {this.bookAlreadyIn}/>)}></Route>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport  {BrowserRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(<BrowserRouter> <App /> </BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}